{
  "version": 3,
  "sources": ["../../../app/routes/mui.avatar.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/mui.avatar.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/mui.avatar.tsx\");\n  import.meta.hot.lastModified = \"1746376410835.6516\";\n}\n// REMIX HMR END\n\nimport { Avatar, AvatarGroup, Stack } from \"@mui/material\";\nexport default function AvatarDemo() {\n  return <Stack spacing={3}>\n      <Stack spacing={1} direction={\"row\"}>\n        <Avatar sx={{\n        backgroundColor: \"green\"\n      }}>t1</Avatar>\n        <Avatar sx={{\n        backgroundColor: \"red\"\n      }}>t2</Avatar>\n      </Stack>\n\n      <Stack spacing={1} direction={\"row\"}>\n        <AvatarGroup>\n          <Avatar sx={{\n          backgroundColor: \"green\"\n        }}>c1</Avatar>\n          <Avatar variant=\"square\" sx={{\n          backgroundColor: \"red\",\n          width: 48,\n          height: 48\n        }} src=\"https://picsum.photos/100/100\" alt=\"c2\">\n            c2\n          </Avatar>\n          <Avatar sx={{\n          backgroundColor: \"red\",\n          width: 48,\n          height: 48\n        }} src=\"https://picsum.photos/100/100\" alt=\"t2\">\n            t2\n          </Avatar>\n        </AvatarGroup>\n      </Stack>\n    </Stack>;\n}\n_c = AvatarDemo;\nvar _c;\n$RefreshReg$(_c, \"AvatarDemo\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAwBQ;AAvBR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,gCAAkC,EAAE;AAAA,EAC7E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2B;AAC3B,cAAY,IAAI,eAAe;AACjC;AAIe,SAAR,aAA8B;AACnC,SAAO,mDAAC,iBAAM,SAAS,GACnB;AAAA,uDAAC,iBAAM,SAAS,GAAG,WAAW,OAC5B;AAAA,yDAAC,kBAAO,IAAI;AAAA,QACZ,iBAAiB;AAAA,MACnB,GAAG,kBAFD;AAAA;AAAA;AAAA;AAAA,aAEG;AAAA,MACH,mDAAC,kBAAO,IAAI;AAAA,QACZ,iBAAiB;AAAA,MACnB,GAAG,kBAFD;AAAA;AAAA;AAAA;AAAA,aAEG;AAAA,SANL;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,IAEA,mDAAC,iBAAM,SAAS,GAAG,WAAW,OAC5B,6DAAC,uBACC;AAAA,yDAAC,kBAAO,IAAI;AAAA,QACZ,iBAAiB;AAAA,MACnB,GAAG,kBAFD;AAAA;AAAA;AAAA;AAAA,aAEG;AAAA,MACH,mDAAC,kBAAO,SAAQ,UAAS,IAAI;AAAA,QAC7B,iBAAiB;AAAA,QACjB,OAAO;AAAA,QACP,QAAQ;AAAA,MACV,GAAG,KAAI,iCAAgC,KAAI,MAAK,kBAJ9C;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MACA,mDAAC,kBAAO,IAAI;AAAA,QACZ,iBAAiB;AAAA,QACjB,OAAO;AAAA,QACP,QAAQ;AAAA,MACV,GAAG,KAAI,iCAAgC,KAAI,MAAK,kBAJ9C;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,SAjBF;AAAA;AAAA;AAAA;AAAA,WAkBA,KAnBF;AAAA;AAAA;AAAA;AAAA,WAoBA;AAAA,OA9BG;AAAA;AAAA;AAAA;AAAA,SA+BL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,YAAY;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
