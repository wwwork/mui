{
  "version": 3,
  "sources": ["../../../app/routes/mui.snack.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/mui.snack.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/mui.snack.tsx\");\n  import.meta.hot.lastModified = \"1745846860891.5933\";\n}\n// REMIX HMR END\n\nimport { Snackbar, Button, Alert } from \"@mui/material\";\nimport { forwardRef, useState } from \"react\";\nconst SnackbarAlert = forwardRef(_c = function SnaBarAlert(props, ref) {\n  return <Alert elevation={4} ref={ref} {...props} />;\n});\n_c2 = SnackbarAlert;\nexport default function Boks() {\n  _s();\n  const [open, setOpen] = useState(false);\n  const handleClose = () => {\n    setOpen(false);\n  };\n  return <>\n      <Button onClick={() => setOpen(true)}>Submit</Button>\n      {/* <Snackbar\n        message=\"this is a snackbar message\"\n        autoHideDuration={4000}\n        open={open}\n        onClose={handleClose}\n        anchorOrigin={{\n          vertical: \"bottom\",\n          horizontal: \"center\",\n        }}\n       /> */}\n\n      <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n        <SnackbarAlert onClose={handleClose}>\n          FormSubmitted successfully\n        </SnackbarAlert>\n      </Snackbar>\n    </>;\n}\n_s(Boks, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n_c3 = Boks;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SnackbarAlert$forwardRef\");\n$RefreshReg$(_c2, \"SnackbarAlert\");\n$RefreshReg$(_c3, \"Boks\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,mBAAqC;AAE5B;AAvBT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,+BAAiC,EAAE;AAAA,EAC5E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA0B;AAC1B,cAAY,IAAI,eAAe;AACjC;AAKA,IAAM,oBAAgB,yBAAW,KAAK,SAAS,YAAY,OAAO,KAAK;AACrE,SAAO,mDAAC,iBAAM,WAAW,GAAG,KAAW,GAAG,SAAnC;AAAA;AAAA;AAAA;AAAA,SAA0C;AACnD,CAAC;AACD,MAAM;AACS,SAAR,OAAwB;AAC7B,KAAG;AACH,QAAM,CAAC,MAAM,OAAO,QAAI,uBAAS,KAAK;AACtC,QAAM,cAAc,MAAM;AACxB,YAAQ,KAAK;AAAA,EACf;AACA,SAAO,sFACH;AAAA,uDAAC,kBAAO,SAAS,MAAM,QAAQ,IAAI,GAAG,sBAAtC;AAAA;AAAA;AAAA;AAAA,WAA4C;AAAA,IAY5C,mDAAC,oBAAS,MAAY,kBAAkB,KAAM,SAAS,aACrD,6DAAC,iBAAc,SAAS,aAAa,0CAArC;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OAjBG;AAAA;AAAA;AAAA;AAAA,SAkBL;AACJ;AACA,GAAG,MAAM,8BAA8B;AACvC,MAAM;AACN,IAAI;AAAJ,IAAQ;AAAR,IAAa;AACb,aAAa,IAAI,0BAA0B;AAC3C,aAAa,KAAK,eAAe;AACjC,aAAa,KAAK,MAAM;AAExB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
