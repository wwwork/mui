{
  "version": 3,
  "sources": ["../../../app/routes/mui.buttons.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/mui.buttons.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/mui.buttons.tsx\");\n  import.meta.hot.lastModified = \"1746376500931.6404\";\n}\n// REMIX HMR END\n\nimport { Stack, Button, IconButton, ButtonGroup, ToggleButtonGroup, ToggleButton } from \"@mui/material\";\nimport SendIcon from \"@mui/icons-material/Send\";\nimport FormatBoldIcon from \"@mui/icons-material/FormatBold\";\nimport FormatItalicIcon from \"@mui/icons-material/FormatItalic\";\nimport FormatUnderlinedIcon from \"@mui/icons-material/FormatUnderlined\";\nimport { useState } from \"react\";\nexport default function ButtonDemo() {\n  _s();\n  const [formats, setFormats] = useState(null);\n  const handleFormats = (_event, updateFormats) => {\n    console.log(updateFormats);\n    setFormats(updateFormats);\n  };\n  return <Stack spacing={4}>\n      <Stack spacing={2} direction=\"row\">\n        <Button variant=\"text\" href=\"http://google.com\">\n          Button\n        </Button>\n        <Button variant=\"contained\">Button</Button>\n        <Button variant=\"outlined\">Button</Button>\u00A1\n      </Stack>\n\n      <Stack spacing={2} direction=\"row\">\n        <Button variant=\"contained\" color=\"primary\">\n          Primary\n        </Button>\n        <Button variant=\"contained\" color=\"warning\">\n          Warning\n        </Button>\n        <Button variant=\"contained\" color=\"error\">\n          Error\n        </Button>\n        <Button variant=\"contained\" color=\"info\">\n          Info\n        </Button>\n        <Button variant=\"contained\" color=\"success\">\n          Success\n        </Button>\n      </Stack>\n      <Stack spacing={2} direction=\"row\" display=\"block\">\n        <Button variant=\"contained\" size=\"small\">\n          Small\n        </Button>\n\n        <Button variant=\"contained\" size=\"medium\">\n          Medium\n        </Button>\n        <Button variant=\"contained\" size=\"large\">\n          Large\n        </Button>\n      </Stack>\n      <Stack direction=\"row\" spacing={2}>\n        <Button startIcon={<SendIcon />} variant=\"contained\" onClick={() => alert(\"test\")}>\n          SendIcon\n        </Button>\n        <Button variant=\"contained\" endIcon={<SendIcon />} disableElevation>\n          SendIcon\n        </Button>\n\n        <IconButton aria-label=\"Send icon\" color=\"success\" size=\"large\">\n          <SendIcon />\n        </IconButton>\n      </Stack>\n      <Stack direction={\"row\"}>\n        <ToggleButtonGroup exclusive value={formats} onChange={handleFormats} size=\"large\" color=\"warning\">\n          <ToggleButton aria-label=\"bold\" value={\"bold\"}>\n            <FormatBoldIcon />\n          </ToggleButton>\n          <ToggleButton aria-label=\"Italic\" value={\"italic\"}>\n            <FormatItalicIcon />\n          </ToggleButton>\n          <ToggleButton aria-label=\"underline\" value={\"underline\"}>\n            <FormatUnderlinedIcon />\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </Stack>\n      <Stack direction={\"row\"}>\n        <ButtonGroup aria-aria-label=\"test\" variant=\"outlined\" orientation=\"vertical\" size=\"large\" color=\"warning\">\n          <Button>Left </Button>\n          <Button>Center </Button>\n          <Button>Right</Button>\n        </ButtonGroup>\n      </Stack>\n    </Stack>;\n}\n_s(ButtonDemo, \"53NhuosXKxM1BOZqmWmyn0VbUaU=\");\n_c = ButtonDemo;\nvar _c;\n$RefreshReg$(_c, \"ButtonDemo\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
