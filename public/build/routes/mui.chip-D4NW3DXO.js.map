{
  "version": 3,
  "sources": ["../../../app/routes/mui.chip.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/mui.chip.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/mui.chip.tsx\");\n  import.meta.hot.lastModified = \"1746376555533.7488\";\n}\n// REMIX HMR END\n\nimport { useState } from \"react\";\nimport { Avatar, Chip, Stack } from \"@mui/material\";\nimport { Face } from \"@mui/icons-material\";\nexport default function ChipDemo() {\n  _s();\n  function handleClick() {\n    alert(1);\n  }\n  const [chips, _] = useState([\"chip1\", \"chip2\", \"chip3\"]);\n  return <Stack width={\"150px\"} direction={\"row\"} spacing={1}>\n      <Chip label=\"test\" color=\"primary\" icon={<Face />} />\n      <Chip label=\"Delete\" color=\"error\" onDelete={() => alert(\"delete clicked\")} />\n      <Chip onClick={handleClick} label=\"test\" color=\"primary\" size=\"medium\" variant=\"outlined\" avatar={<Avatar>V</Avatar>} />\n\n      {chips.map(item => <Chip key={item} label={item} onDelete={() => alert(` delete ${item}`)} />)}\n    </Stack>;\n}\n_s(ChipDemo, \"kKEa5vOusH4P3ds6HZ7SEZ13FUk=\");\n_c = ChipDemo;\nvar _c;\n$RefreshReg$(_c, \"ChipDemo\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,mBAAyB;AAUsB;AA9B/C,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8BAAgC,EAAE;AAAA,EAC3E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyB;AACzB,cAAY,IAAI,eAAe;AACjC;AAMe,SAAR,WAA4B;AACjC,KAAG;AACH,WAAS,cAAc;AACrB,UAAM,CAAC;AAAA,EACT;AACA,QAAM,CAAC,OAAO,CAAC,QAAI,uBAAS,CAAC,SAAS,SAAS,OAAO,CAAC;AACvD,SAAO,mDAAC,iBAAM,OAAO,SAAS,WAAW,OAAO,SAAS,GACrD;AAAA,uDAAC,gBAAK,OAAM,QAAO,OAAM,WAAU,MAAM,mDAAC,kBAAD;AAAA;AAAA;AAAA;AAAA,WAAM,KAA/C;AAAA;AAAA;AAAA;AAAA,WAAmD;AAAA,IACnD,mDAAC,gBAAK,OAAM,UAAS,OAAM,SAAQ,UAAU,MAAM,MAAM,gBAAgB,KAAzE;AAAA;AAAA;AAAA;AAAA,WAA4E;AAAA,IAC5E,mDAAC,gBAAK,SAAS,aAAa,OAAM,QAAO,OAAM,WAAU,MAAK,UAAS,SAAQ,YAAW,QAAQ,mDAAC,kBAAO,iBAAR;AAAA;AAAA;AAAA;AAAA,WAAS,KAA3G;AAAA;AAAA;AAAA;AAAA,WAAsH;AAAA,IAErH,MAAM,IAAI,UAAQ,mDAAC,gBAAgB,OAAO,MAAM,UAAU,MAAM,MAAM,WAAW,MAAM,KAA1D,MAAX;AAAA;AAAA;AAAA;AAAA,WAAwE,CAAE;AAAA,OAL1F;AAAA;AAAA;AAAA;AAAA,SAML;AACJ;AACA,GAAG,UAAU,8BAA8B;AAC3C,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,UAAU;AAE3B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
