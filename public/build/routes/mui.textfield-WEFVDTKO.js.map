{
  "version": 3,
  "sources": ["../../../app/routes/mui.textfield.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/mui.textfield.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/mui.textfield.tsx\");\n  import.meta.hot.lastModified = \"1746377131901.9614\";\n}\n// REMIX HMR END\n\nimport { Stack, TextField, InputAdornment } from \"@mui/material\";\nimport React, { useState } from \"react\";\nexport default function TextFieldDemo() {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const handleChange = event => {\n    console.log(event.currentTarget.value);\n    setValue(event.currentTarget.value);\n  };\n  return <Stack spacing={4}>\n      <Stack direction=\"row\" spacing={2}>\n        <TextField label=\"test\" variant=\"outlined\" />\n        <TextField label=\"test\" variant=\"filled\" />\n        <TextField label=\"test\" variant=\"standard\" />\n      </Stack>\n      <Stack direction=\"row\" spacing={2}>\n        <TextField label=\"test1ss\" variant=\"outlined\" size=\"small\" color=\"warning\" value={value} error={!value} helperText={!value ? \"Require\" : \"Error happen\"} onChange={handleChange} />\n      </Stack>\n      <Stack direction=\"row\" spacing={2}>\n        <TextField label=\"amount\" InputProps={{\n        startAdornment: <InputAdornment position=\"start\">$</InputAdornment>\n      }} />\n        <TextField label=\"weight\" InputProps={{\n        endAdornment: <InputAdornment position=\"end\">kg</InputAdornment>\n      }} />\n      </Stack>\n      <Stack direction=\"row\" spacing={2}>\n        <TextField label=\"test\" variant=\"outlined\" size=\"small\" color=\"warning\" required type=\"password\" value={\"password\"} />\n        <TextField label=\"test\" variant=\"outlined\" size=\"small\" color=\"warning\" helperText=\"helper text\" disabled error />\n\n        <TextField label=\"readonly\" variant=\"outlined\" size=\"small\" color=\"warning\" helperText=\"readonly\" InputProps={{\n        readOnly: true\n      }} />\n      </Stack>\n    </Stack>;\n}\n_s(TextFieldDemo, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n_c = TextFieldDemo;\nvar _c;\n$RefreshReg$(_c, \"TextFieldDemo\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}
