{
  "version": 3,
  "sources": ["../../../app/routes/mui.image-list.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/mui.image-list.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/mui.image-list.tsx\");\n  import.meta.hot.lastModified = \"1746376642777.8533\";\n}\n// REMIX HMR END\n\nimport { Box, Paper, Stack, ImageList, ImageListItem, ImageListItemBar } from \"@mui/material\";\nconst images = [{\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}];\nconst images2 = [{\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}];\nconst images3 = [{\n  img: \"https://picsum.photos/400/600\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/100/300\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/400/400\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/400/300\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/300/300\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}, {\n  img: \"https://picsum.photos/200/200\",\n  title: \"Tetst\"\n}];\nexport default function ImageListDemo() {\n  return <Paper elevation={4}>\n      <Stack spacing={4}>\n        <ImageList sx={{\n        width: 500,\n        height: 450\n      }} cols={3} rowHeight={164}>\n          {images.map((item, idx) => <ImageListItem key={idx}>\n              <img src={item.img} alt={item.title} loading=\"lazy\" />\n              <ImageListItemBar title={item.title} />\n            </ImageListItem>)}\n        </ImageList>\n\n        <ImageList variant=\"woven\" sx={{\n        width: 500,\n        height: 450\n      }} cols={3} gap={8} rowHeight={164}>\n          {images2.map((item, idx) => <ImageListItem key={idx}>\n              <img src={item.img} alt={item.title} loading=\"lazy\" />\n            </ImageListItem>)}\n        </ImageList>\n\n        <Box sx={{\n        width: 500,\n        height: 450,\n        overflowY: \"scroll\"\n      }}>\n          <ImageList variant=\"masonry\" cols={3} gap={8} rowHeight={164}>\n            {images3.map((item, idx) => <ImageListItem key={idx}>\n                <img src={item.img} alt={item.title} loading=\"lazy\" />\n              </ImageListItem>)}\n          </ImageList>\n        </Box>\n      </Stack>\n    </Paper>;\n}\n_c = ImageListDemo;\nvar _c;\n$RefreshReg$(_c, \"ImageListDemo\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4Ic;AA3Id,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,oCAAsC,EAAE;AAAA,EACjF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA+B;AAC/B,cAAY,IAAI,eAAe;AACjC;AAIA,IAAM,SAAS,CAAC;AAAA,EACd,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,CAAC;AACD,IAAM,UAAU,CAAC;AAAA,EACf,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,CAAC;AACD,IAAM,UAAU,CAAC;AAAA,EACf,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,GAAG;AAAA,EACD,KAAK;AAAA,EACL,OAAO;AACT,CAAC;AACc,SAAR,gBAAiC;AACtC,SAAO,mDAAC,iBAAM,WAAW,GACrB,6DAAC,iBAAM,SAAS,GACd;AAAA,uDAAC,qBAAU,IAAI;AAAA,MACf,OAAO;AAAA,MACP,QAAQ;AAAA,IACV,GAAG,MAAM,GAAG,WAAW,KAClB,iBAAO,IAAI,CAAC,MAAM,QAAQ,mDAAC,yBACxB;AAAA,yDAAC,SAAI,KAAK,KAAK,KAAK,KAAK,KAAK,OAAO,SAAQ,UAA7C;AAAA;AAAA;AAAA;AAAA,aAAoD;AAAA,MACpD,mDAAC,4BAAiB,OAAO,KAAK,SAA9B;AAAA;AAAA;AAAA;AAAA,aAAqC;AAAA,SAFM,KAApB;AAAA;AAAA;AAAA;AAAA,WAGzB,CAAgB,KAPpB;AAAA;AAAA;AAAA;AAAA,WAQA;AAAA,IAEA,mDAAC,qBAAU,SAAQ,SAAQ,IAAI;AAAA,MAC/B,OAAO;AAAA,MACP,QAAQ;AAAA,IACV,GAAG,MAAM,GAAG,KAAK,GAAG,WAAW,KAC1B,kBAAQ,IAAI,CAAC,MAAM,QAAQ,mDAAC,yBACzB,6DAAC,SAAI,KAAK,KAAK,KAAK,KAAK,KAAK,OAAO,SAAQ,UAA7C;AAAA;AAAA;AAAA;AAAA,WAAoD,KADR,KAApB;AAAA;AAAA;AAAA;AAAA,WAE1B,CAAgB,KANpB;AAAA;AAAA;AAAA;AAAA,WAOA;AAAA,IAEA,mDAAC,eAAI,IAAI;AAAA,MACT,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,WAAW;AAAA,IACb,GACI,6DAAC,qBAAU,SAAQ,WAAU,MAAM,GAAG,KAAK,GAAG,WAAW,KACtD,kBAAQ,IAAI,CAAC,MAAM,QAAQ,mDAAC,yBACzB,6DAAC,SAAI,KAAK,KAAK,KAAK,KAAK,KAAK,OAAO,SAAQ,UAA7C;AAAA;AAAA;AAAA;AAAA,WAAoD,KADR,KAApB;AAAA;AAAA;AAAA;AAAA,WAE1B,CAAgB,KAHpB;AAAA;AAAA;AAAA;AAAA,WAIA,KATF;AAAA;AAAA;AAAA;AAAA,WAUA;AAAA,OA9BF;AAAA;AAAA;AAAA;AAAA,SA+BA,KAhCG;AAAA;AAAA;AAAA;AAAA,SAiCL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,eAAe;AAEhC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
