{
  "version": 3,
  "sources": ["../../../app/routes/mui.grid.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/mui.grid.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/mui.grid.tsx\");\n  import.meta.hot.lastModified = \"1746376611349.2456\";\n}\n// REMIX HMR END\n\nimport { Box, Stack, Divider, Grid } from \"@mui/material\";\nexport default function GridDemo() {\n  return <>\n      <Stack sx={{\n      border: \"1px solid\",\n      direction: \"revert\",\n      gap: \"5px\"\n    }} direction={\"row\"} spacing={2} divider={<Divider orientation=\"vertical\" flexItem />}>\n        <Box sx={{\n        backgroundColor: \"primary.main\",\n        color: \"red\",\n        height: \"100px\",\n        width: \"100px\",\n        padding: \"16px\",\n        \"&:hover\": {\n          backgroundColor: \"primary.light\"\n        }\n      }}>\n          Test\n        </Box>\n      </Stack>\n      <Grid container my={3} rowSpacing={2} columnSpacing={1}>\n        <Grid>\n          <Box sx={{\n          backgroundColor: \"primary.light\"\n        }} p={2}>\n            Item1\n          </Box>\n        </Grid>\n        <Grid>\n          <Box sx={{\n          backgroundColor: \"primary.light\"\n        }} p={2}>\n            Item2\n          </Box>\n        </Grid>\n        <Grid>\n          <Box sx={{\n          backgroundColor: \"primary.light\"\n        }} p={2}>\n            Item3\n          </Box>\n        </Grid>\n        <Grid>\n          <Box sx={{\n          backgroundColor: \"primary.light\"\n        }} p={2}>\n            Item4\n          </Box>\n        </Grid>\n      </Grid>\n    </>;\n}\n_c = GridDemo;\nvar _c;\n$RefreshReg$(_c, \"GridDemo\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAsBS;AArBT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8BAAgC,EAAE;AAAA,EAC3E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAyB;AACzB,cAAY,IAAI,eAAe;AACjC;AAIe,SAAR,WAA4B;AACjC,SAAO,sFACH;AAAA,uDAAC,iBAAM,IAAI;AAAA,MACX,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,KAAK;AAAA,IACP,GAAG,WAAW,OAAO,SAAS,GAAG,SAAS,mDAAC,mBAAQ,aAAY,YAAW,UAAQ,QAAxC;AAAA;AAAA;AAAA;AAAA,WAAyC,GAC/E,6DAAC,eAAI,IAAI;AAAA,MACT,iBAAiB;AAAA,MACjB,OAAO;AAAA,MACP,QAAQ;AAAA,MACR,OAAO;AAAA,MACP,SAAS;AAAA,MACT,WAAW;AAAA,QACT,iBAAiB;AAAA,MACnB;AAAA,IACF,GAAG,oBATD;AAAA;AAAA;AAAA;AAAA,WAWA,KAhBF;AAAA;AAAA;AAAA;AAAA,WAiBA;AAAA,IACA,mDAAC,gBAAK,WAAS,MAAC,IAAI,GAAG,YAAY,GAAG,eAAe,GACnD;AAAA,yDAAC,gBACC,6DAAC,eAAI,IAAI;AAAA,QACT,iBAAiB;AAAA,MACnB,GAAG,GAAG,GAAG,qBAFP;AAAA;AAAA;AAAA;AAAA,aAIA,KALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MACA,mDAAC,gBACC,6DAAC,eAAI,IAAI;AAAA,QACT,iBAAiB;AAAA,MACnB,GAAG,GAAG,GAAG,qBAFP;AAAA;AAAA;AAAA;AAAA,aAIA,KALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MACA,mDAAC,gBACC,6DAAC,eAAI,IAAI;AAAA,QACT,iBAAiB;AAAA,MACnB,GAAG,GAAG,GAAG,qBAFP;AAAA;AAAA;AAAA;AAAA,aAIA,KALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,MACA,mDAAC,gBACC,6DAAC,eAAI,IAAI;AAAA,QACT,iBAAiB;AAAA,MACnB,GAAG,GAAG,GAAG,qBAFP;AAAA;AAAA;AAAA;AAAA,aAIA,KALF;AAAA;AAAA;AAAA;AAAA,aAMA;AAAA,SA5BF;AAAA;AAAA;AAAA;AAAA,WA6BA;AAAA,OAhDG;AAAA;AAAA;AAAA;AAAA,SAiDL;AACJ;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,UAAU;AAE3B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
